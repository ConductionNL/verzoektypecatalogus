openapi: 3.0.2
info:
  title: 'Verzoek Type Catalogus'
  version: V1.0
  description: |
    API Details
    - Component: Verzoek Type Catalogus
    - Reference: vtc
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/verzoektypecatalogus) / [zip](https://github.com/ConductionNL/verzoektypecatalogus/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/vtc-php) 
    - Datamodel: [postman](/schema/vtc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /properties:
    get:
      tags:
        - Property
      operationId: getPropertyCollection
      summary: 'Retrieves the collection of Property resources.'
      responses:
        200:
          description: 'Property collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Property:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Property:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property-read'
      parameters:
        -
          name: exclusiveMaximum
          in: query
          required: false
          schema:
            type: boolean
        -
          name: exclusiveMinimum
          in: query
          required: false
          schema:
            type: boolean
        -
          name: additionalItems
          in: query
          required: false
          schema:
            type: boolean
        -
          name: uniqueItems
          in: query
          required: false
          schema:
            type: boolean
        -
          name: required
          in: query
          required: false
          schema:
            type: boolean
        -
          name: nullable
          in: query
          required: false
          schema:
            type: boolean
        -
          name: readOnly
          in: query
          required: false
          schema:
            type: boolean
        -
          name: writeOnly
          in: query
          required: false
          schema:
            type: boolean
        -
          name: deprecated
          in: query
          required: false
          schema:
            type: boolean
        -
          name: start
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[title]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[utter]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[order]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[format]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[iri]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[query]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[multipleOf]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maximum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[exclusiveMaximum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minimum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[exclusiveMinimum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maxLength]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minLength]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[pattern]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[additionalItems]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maxItems]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minItems]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[uniqueItems]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maxProperties]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minProperties]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[required]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[properties]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[additionalProperties]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[object]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[enum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[allOf]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[anyOf]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[oneOf]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[definitions]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[defaultValue]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[nullable]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[discriminator]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[readOnly]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[writeOnly]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[xml]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[externalDoc]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[example]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[deprecated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[availableFrom]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[availableUntil]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maxDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[icon]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[slug]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[start]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[configuration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'availableFrom[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableFrom[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableFrom[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableFrom[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: title
          in: query
          required: false
          schema:
            type: string
        -
          name: 'title[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: utter
          in: query
          required: false
          schema:
            type: string
        -
          name: 'utter[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: order
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'order[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: format
          in: query
          required: false
          schema:
            type: string
        -
          name: 'format[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: iri
          in: query
          required: false
          schema:
            type: string
        -
          name: 'iri[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: query
          in: query
          required: false
          schema:
            type: string
        -
          name: 'query[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: multipleOf
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'multipleOf[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: maximum
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maximum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: exclusiveMaximum
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'exclusiveMaximum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: minimum
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'minimum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: exclusiveMinimum
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'exclusiveMinimum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: maxLength
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maxLength[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: minLength
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'minLength[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: pattern
          in: query
          required: false
          schema:
            type: string
        -
          name: 'pattern[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: additionalItems
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'additionalItems[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: maxItems
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maxItems[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: minItems
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'minItems[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: uniqueItems
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'uniqueItems[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: maxProperties
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maxProperties[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: minProperties
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'minProperties[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: required
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'required[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: properties
          in: query
          required: false
          schema:
            type: string
        -
          name: 'properties[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: additionalProperties
          in: query
          required: false
          schema:
            type: string
        -
          name: 'additionalProperties[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: object
          in: query
          required: false
          schema:
            type: string
        -
          name: 'object[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: enum
          in: query
          required: false
          schema:
            type: string
        -
          name: 'enum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: allOf
          in: query
          required: false
          schema:
            type: string
        -
          name: 'allOf[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: anyOf
          in: query
          required: false
          schema:
            type: string
        -
          name: 'anyOf[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: oneOf
          in: query
          required: false
          schema:
            type: string
        -
          name: 'oneOf[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: definitions
          in: query
          required: false
          schema:
            type: string
        -
          name: 'definitions[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: defaultValue
          in: query
          required: false
          schema:
            type: string
        -
          name: 'defaultValue[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: nullable
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'nullable[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: discriminator
          in: query
          required: false
          schema:
            type: string
        -
          name: 'discriminator[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: readOnly
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'readOnly[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: writeOnly
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'writeOnly[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: xml
          in: query
          required: false
          schema:
            type: string
        -
          name: 'xml[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: externalDoc
          in: query
          required: false
          schema:
            type: string
        -
          name: 'externalDoc[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: example
          in: query
          required: false
          schema:
            type: string
        -
          name: 'example[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: deprecated
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'deprecated[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: availableFrom
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableFrom[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: availableUntil
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: minDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'minDate[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: maxDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'maxDate[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: icon
          in: query
          required: false
          schema:
            type: string
        -
          name: 'icon[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: slug
          in: query
          required: false
          schema:
            type: string
        -
          name: 'slug[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: start
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'start[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: configuration
          in: query
          required: false
          schema:
            type: string
        -
          name: 'configuration[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Property
      operationId: postPropertyCollection
      summary: 'Creates a Property resource.'
      responses:
        201:
          description: 'Property resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
          links:
            GetPropertyItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPropertyItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /properties/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Property:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Property:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Property-write'
        description: 'The new Property resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/properties/{id}':
    get:
      tags:
        - Property
      operationId: getPropertyItem
      summary: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Property resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Property
      operationId: putPropertyItem
      summary: 'Replaces the Property resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Property resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Property:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Property:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Property-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Property-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Property-write'
        description: 'The updated Property resource'
    delete:
      tags:
        - Property
      operationId: deletePropertyItem
      summary: 'Removes the Property resource.'
      responses:
        204:
          description: 'Property resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/properties/{id}/audit_trail':
    get:
      tags:
        - Property
      operationId: get_audit_trailPropertyItem
      summary: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Property resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/properties/{id}/change_log':
    get:
      tags:
        - Property
      operationId: get_change_logsPropertyItem
      summary: 'Retrieves a Property resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Property resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Property:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Property-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Property-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Property-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /request_types:
    get:
      tags:
        - RequestType
      operationId: getRequestTypeCollection
      summary: 'Retrieves the collection of RequestType resources.'
      responses:
        200:
          description: 'RequestType collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RequestType:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/RequestType:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestType-read'
      parameters:
        -
          name: unique
          in: query
          required: false
          schema:
            type: boolean
        -
          name: parentRequired
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[icon]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[availableFrom]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[availableUntil]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[unique]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[parentRequired]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[caseType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'availableFrom[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableFrom[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableFrom[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableFrom[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: icon
          in: query
          required: false
          schema:
            type: string
        -
          name: 'icon[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: availableFrom
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableFrom[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: availableUntil
          in: query
          required: false
          schema:
            type: string
        -
          name: 'availableUntil[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: unique
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'unique[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: parentRequired
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'parentRequired[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: caseType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'caseType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'exists[parent]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'exists[children]'
          in: query
          required: false
          schema:
            type: boolean
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - RequestType
      operationId: postRequestTypeCollection
      summary: 'Creates a RequestType resource.'
      responses:
        201:
          description: 'RequestType resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestType-read'
          links:
            GetRequestTypeItem:
              parameters:
                id: '$response.body#/id'
              operationId: getRequestTypeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /request_types/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestType:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/RequestType:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          text/html:
            schema:
              $ref: '#/components/schemas/RequestType-write'
        description: 'The new RequestType resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/request_types/{id}':
    get:
      tags:
        - RequestType
      operationId: getRequestTypeItem
      summary: 'Retrieves a RequestType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'RequestType resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestType-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - RequestType
      operationId: putRequestTypeItem
      summary: 'Replaces the RequestType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'RequestType resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestType-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/RequestType:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/RequestType:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/RequestType-write'
          text/html:
            schema:
              $ref: '#/components/schemas/RequestType-write'
        description: 'The updated RequestType resource'
    delete:
      tags:
        - RequestType
      operationId: deleteRequestTypeItem
      summary: 'Removes the RequestType resource.'
      responses:
        204:
          description: 'RequestType resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/request_types/{id}/audit_trail':
    get:
      tags:
        - RequestType
      operationId: get_audit_trailRequestTypeItem
      summary: 'Retrieves a RequestType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'RequestType resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestType-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/request_types/{id}/change_log':
    get:
      tags:
        - RequestType
      operationId: get_change_logsRequestTypeItem
      summary: 'Retrieves a RequestType resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'RequestType resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/RequestType:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/RequestType-read'
            text/html:
              schema:
                $ref: '#/components/schemas/RequestType-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /tasks:
    get:
      tags:
        - Task
      operationId: getTaskCollection
      summary: 'Retrieves the collection of Task resources.'
      responses:
        200:
          description: 'Task collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Task:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Task:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[event]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[code]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[requestHeaders]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[requestBody]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[webHookHeaders]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[timeInterval]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: event
          in: query
          required: false
          schema:
            type: string
        -
          name: 'event[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: code
          in: query
          required: false
          schema:
            type: string
        -
          name: 'code[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: requestHeaders
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requestHeaders[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: requestBody
          in: query
          required: false
          schema:
            type: string
        -
          name: 'requestBody[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: webHookHeaders
          in: query
          required: false
          schema:
            type: string
        -
          name: 'webHookHeaders[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: timeInterval
          in: query
          required: false
          schema:
            type: string
        -
          name: 'timeInterval[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Task
      operationId: postTaskCollection
      summary: 'Creates a Task resource.'
      responses:
        201:
          description: 'Task resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Task:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Task:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Task-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Task-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Task-read'
          links:
            GetTaskItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTaskItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /tasks/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Task:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Task:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Task-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Task-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Task-write'
        description: 'The new Task resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/tasks/{id}':
    get:
      tags:
        - Task
      operationId: getTaskItem
      summary: 'Retrieves a Task resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Task resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Task:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Task:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Task-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Task-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Task-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Task
      operationId: deleteTaskItem
      summary: 'Removes the Task resource.'
      responses:
        204:
          description: 'Task resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Task
      operationId: putTaskItem
      summary: 'Replaces the Task resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Task resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Task:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Task:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Task-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Task-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Task-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Task:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Task:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Task-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Task-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Task-write'
        description: 'The updated Task resource'
    patch:
      tags:
        - Task
      operationId: patchTaskItem
      summary: 'Updates the Task resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Task resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Task:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Task:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Task-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Task-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Task-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Task-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Task:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Task-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Task-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Task-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Task-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Task-write'
        description: 'The updated Task resource'
components:
  schemas:
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Property-read:
      type: object
      description: |
        This property follows the following schemes (in order of importance)
        https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md
        https://tools.ietf.org/html/draft-wright-json-schema-validation-00
        http://json-schema.org/.
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        requestType:
          description: 'The requestType that this property belongs to'
          $ref: '#/components/schemas/RequestType-read'
        title:
          description: 'The title of this property'
          type: string
        name:
          description: 'The name of the property as used in api calls, extracted from title on snake_case basis'
          type: string
        utter:
          description: 'The utter of this property as a question for chatbot like senarios'
          type: string
          nullable: true
        order:
          description: 'The order in wichs this propertie is desplayed'
          type: integer
          nullable: true
        type:
          description: 'The type of this property'
          type: string
          nullable: true
        format:
          description: 'The swagger type of the property as used in api calls'
          type: string
          nullable: true
        iri:
          description: 'The iri type of the property used to standarize data'
          type: string
          nullable: true
        query:
          description: 'An array of aditional query values that need to be applied to the iri, for example anly accept products from a specific catagory'
          type: array
          items:
            type: string
          nullable: true
        multipleOf:
          description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
          type: integer
          nullable: true
        maximum:
          description: '*Can only be used in combination with type integer* The maximum allowed value'
          type: integer
          nullable: true
        exclusiveMaximum:
          description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
          type: boolean
          nullable: true
        minimum:
          description: '*Can only be used in combination with type integer* The minimum allowed value'
          type: integer
          nullable: true
        exclusiveMinimum:
          description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
          type: boolean
          nullable: true
        maxLength:
          description: 'The maximum amount of characters in the value'
          type: integer
          nullable: true
        minLength:
          description: 'The minimal amount of characters in the value'
          type: integer
          nullable: true
        pattern:
          description: 'A [regular expression](https://en.wikipedia.org/wiki/Regular_expression) that the value should comply to'
          type: string
          nullable: true
        additionalItems:
          description: 'Not yet supported by business logic'
          type: boolean
          nullable: true
        maxItems:
          description: '*Can only be used in combination with type array* The maximum array length'
          type: integer
          nullable: true
        minItems:
          description: '*Can only be used in combination with type array* The minimum allowed value'
          type: integer
          nullable: true
        uniqueItems:
          description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
          type: boolean
          nullable: true
        maxProperties:
          description: '*Can only be used in combination with type integer* The maximum amount of properties an object should contain'
          type: integer
          nullable: true
        minProperties:
          description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
          type: integer
          nullable: true
        required:
          description: 'Only whether or not this property is required'
          type: boolean
          nullable: true
        properties:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        additionalProperties:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        object:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        enum:
          description: 'An array of possible values, input is limited to this array]'
          type: array
          items:
            type: string
          nullable: true
        description:
          description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
          type: string
          nullable: true
        defaultValue:
          description: 'An default value for this value that will be used if a user doesn''t supply a value'
          type: string
          nullable: true
        nullable:
          description: 'Whether or not this property can be left empty'
          type: boolean
          nullable: true
        discriminator:
          description: 'To help API consumers detect the object type, you can add the discriminator/propertyName keyword to model definitions. This keyword points to the property that specifies the data type name'
          type: string
          nullable: true
        readOnly:
          description: 'Whether or not this property is read only'
          type: boolean
          nullable: true
        writeOnly:
          description: 'Whether or not this property is write only'
          type: boolean
          nullable: true
        xml:
          description: 'An XML representation of the swagger docs'
          type: string
          nullable: true
        externalDoc:
          description: 'An link to any external documentation for the value'
          type: string
          nullable: true
        example:
          description: 'An example of the value that should be supplied'
          type: string
          nullable: true
        deprecated:
          description: 'Whether or not this property has been deprecated and wil be removed in the future'
          type: boolean
          nullable: true
        availableFrom:
          description: 'The moment from which this value is available'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        availableUntil:
          description: '*should be used in combination with deprecated* The moment where until this value is available'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        minDate:
          description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        maxDate:
          description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        icon:
          description: 'The icon of this property'
          type: string
          nullable: true
        slug:
          description: 'The slug of this property'
          type: string
          nullable: true
        start:
          description: 'Whether or not this proerty is the starting oint of a process'
          type: boolean
          nullable: true
        configuration:
          description: 'An array of possible configuration options for form ellements'
          type: array
          items:
            type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - requestType
        - title
        - type
        - format
    Property-write:
      type: object
      description: |
        This property follows the following schemes (in order of importance)
        https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md
        https://tools.ietf.org/html/draft-wright-json-schema-validation-00
        http://json-schema.org/.
      required:
        - requestType
        - title
        - type
        - format
      properties:
        requestType:
          description: 'The requestType that this property belongs to'
          $ref: '#/components/schemas/RequestType-write'
        title:
          description: 'The title of this property'
          type: string
        order:
          description: 'The order in wichs this propertie is desplayed'
          type: integer
          nullable: true
        type:
          description: 'The type of this property'
          type: string
          nullable: true
        format:
          description: 'The swagger type of the property as used in api calls'
          type: string
          nullable: true
        iri:
          description: 'The iri type of the property used to standarize data'
          type: string
          nullable: true
        query:
          description: 'An array of aditional query values that need to be applied to the iri, for example anly accept products from a specific catagory'
          type: array
          items:
            type: string
          nullable: true
        multipleOf:
          description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
          type: integer
          nullable: true
        maximum:
          description: '*Can only be used in combination with type integer* The maximum allowed value'
          type: integer
          nullable: true
        exclusiveMaximum:
          description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
          type: boolean
          nullable: true
        minimum:
          description: '*Can only be used in combination with type integer* The minimum allowed value'
          type: integer
          nullable: true
        exclusiveMinimum:
          description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
          type: boolean
          nullable: true
        maxLength:
          description: 'The maximum amount of characters in the value'
          type: integer
          nullable: true
        minLength:
          description: 'The minimal amount of characters in the value'
          type: integer
          nullable: true
        pattern:
          description: 'A [regular expression](https://en.wikipedia.org/wiki/Regular_expression) that the value should comply to'
          type: string
          nullable: true
        additionalItems:
          description: 'Not yet supported by business logic'
          type: boolean
          nullable: true
        maxItems:
          description: '*Can only be used in combination with type array* The maximum array length'
          type: integer
          nullable: true
        minItems:
          description: '*Can only be used in combination with type array* The minimum allowed value'
          type: integer
          nullable: true
        uniqueItems:
          description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
          type: boolean
          nullable: true
        maxProperties:
          description: '*Can only be used in combination with type integer* The maximum amount of properties an object should contain'
          type: integer
          nullable: true
        minProperties:
          description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
          type: integer
          nullable: true
        required:
          description: 'Only whether or not this property is required'
          type: boolean
          nullable: true
        properties:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        additionalProperties:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        object:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        enum:
          description: 'An array of possible values, input is limited to this array]'
          type: array
          items:
            type: string
          nullable: true
        description:
          description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
          type: string
          nullable: true
        defaultValue:
          description: 'An default value for this value that will be used if a user doesn''t supply a value'
          type: string
          nullable: true
        nullable:
          description: 'Whether or not this property can be left empty'
          type: boolean
          nullable: true
        discriminator:
          description: 'To help API consumers detect the object type, you can add the discriminator/propertyName keyword to model definitions. This keyword points to the property that specifies the data type name'
          type: string
          nullable: true
        readOnly:
          description: 'Whether or not this property is read only'
          type: boolean
          nullable: true
        writeOnly:
          description: 'Whether or not this property is write only'
          type: boolean
          nullable: true
        xml:
          description: 'An XML representation of the swagger docs'
          type: string
          nullable: true
        externalDoc:
          description: 'An link to any external documentation for the value'
          type: string
          nullable: true
        example:
          description: 'An example of the value that should be supplied'
          type: string
          nullable: true
        deprecated:
          description: 'Whether or not this property has been deprecated and wil be removed in the future'
          type: boolean
          nullable: true
        availableFrom:
          description: 'The moment from which this value is available'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        availableUntil:
          description: '*should be used in combination with deprecated* The moment where until this value is available'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        minDate:
          description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        maxDate:
          description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        icon:
          description: 'The icon of this property'
          type: string
          nullable: true
        slug:
          description: 'The slug of this property'
          type: string
          nullable: true
        start:
          description: 'Whether or not this proerty is the starting oint of a process'
          type: boolean
          nullable: true
        configuration:
          description: 'An array of possible configuration options for form ellements'
          type: array
          items:
            type: string
          nullable: true
    'Property:jsonld-read':
      type: object
      description: |
        This property follows the following schemes (in order of importance)
        https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md
        https://tools.ietf.org/html/draft-wright-json-schema-validation-00
        http://json-schema.org/.
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        requestType:
          description: 'The requestType that this property belongs to'
          $ref: '#/components/schemas/RequestType:jsonld-read'
        title:
          description: 'The title of this property'
          type: string
        name:
          description: 'The name of the property as used in api calls, extracted from title on snake_case basis'
          type: string
        utter:
          description: 'The utter of this property as a question for chatbot like senarios'
          type: string
          nullable: true
        order:
          description: 'The order in wichs this propertie is desplayed'
          type: integer
          nullable: true
        type:
          description: 'The type of this property'
          type: string
          nullable: true
        format:
          description: 'The swagger type of the property as used in api calls'
          type: string
          nullable: true
        iri:
          description: 'The iri type of the property used to standarize data'
          type: string
          nullable: true
        query:
          description: 'An array of aditional query values that need to be applied to the iri, for example anly accept products from a specific catagory'
          type: array
          items:
            type: string
          nullable: true
        multipleOf:
          description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
          type: integer
          nullable: true
        maximum:
          description: '*Can only be used in combination with type integer* The maximum allowed value'
          type: integer
          nullable: true
        exclusiveMaximum:
          description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
          type: boolean
          nullable: true
        minimum:
          description: '*Can only be used in combination with type integer* The minimum allowed value'
          type: integer
          nullable: true
        exclusiveMinimum:
          description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
          type: boolean
          nullable: true
        maxLength:
          description: 'The maximum amount of characters in the value'
          type: integer
          nullable: true
        minLength:
          description: 'The minimal amount of characters in the value'
          type: integer
          nullable: true
        pattern:
          description: 'A [regular expression](https://en.wikipedia.org/wiki/Regular_expression) that the value should comply to'
          type: string
          nullable: true
        additionalItems:
          description: 'Not yet supported by business logic'
          type: boolean
          nullable: true
        maxItems:
          description: '*Can only be used in combination with type array* The maximum array length'
          type: integer
          nullable: true
        minItems:
          description: '*Can only be used in combination with type array* The minimum allowed value'
          type: integer
          nullable: true
        uniqueItems:
          description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
          type: boolean
          nullable: true
        maxProperties:
          description: '*Can only be used in combination with type integer* The maximum amount of properties an object should contain'
          type: integer
          nullable: true
        minProperties:
          description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
          type: integer
          nullable: true
        required:
          description: 'Only whether or not this property is required'
          type: boolean
          nullable: true
        properties:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        additionalProperties:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        object:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        enum:
          description: 'An array of possible values, input is limited to this array]'
          type: array
          items:
            type: string
          nullable: true
        description:
          description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
          type: string
          nullable: true
        defaultValue:
          description: 'An default value for this value that will be used if a user doesn''t supply a value'
          type: string
          nullable: true
        nullable:
          description: 'Whether or not this property can be left empty'
          type: boolean
          nullable: true
        discriminator:
          description: 'To help API consumers detect the object type, you can add the discriminator/propertyName keyword to model definitions. This keyword points to the property that specifies the data type name'
          type: string
          nullable: true
        readOnly:
          description: 'Whether or not this property is read only'
          type: boolean
          nullable: true
        writeOnly:
          description: 'Whether or not this property is write only'
          type: boolean
          nullable: true
        xml:
          description: 'An XML representation of the swagger docs'
          type: string
          nullable: true
        externalDoc:
          description: 'An link to any external documentation for the value'
          type: string
          nullable: true
        example:
          description: 'An example of the value that should be supplied'
          type: string
          nullable: true
        deprecated:
          description: 'Whether or not this property has been deprecated and wil be removed in the future'
          type: boolean
          nullable: true
        availableFrom:
          description: 'The moment from which this value is available'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        availableUntil:
          description: '*should be used in combination with deprecated* The moment where until this value is available'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        minDate:
          description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        maxDate:
          description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        icon:
          description: 'The icon of this property'
          type: string
          nullable: true
        slug:
          description: 'The slug of this property'
          type: string
          nullable: true
        start:
          description: 'Whether or not this proerty is the starting oint of a process'
          type: boolean
          nullable: true
        configuration:
          description: 'An array of possible configuration options for form ellements'
          type: array
          items:
            type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - requestType
        - title
        - type
        - format
    'Property:jsonld-write':
      type: object
      description: |
        This property follows the following schemes (in order of importance)
        https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md
        https://tools.ietf.org/html/draft-wright-json-schema-validation-00
        http://json-schema.org/.
      required:
        - requestType
        - title
        - type
        - format
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        requestType:
          description: 'The requestType that this property belongs to'
          $ref: '#/components/schemas/RequestType:jsonld-write'
        title:
          description: 'The title of this property'
          type: string
        order:
          description: 'The order in wichs this propertie is desplayed'
          type: integer
          nullable: true
        type:
          description: 'The type of this property'
          type: string
          nullable: true
        format:
          description: 'The swagger type of the property as used in api calls'
          type: string
          nullable: true
        iri:
          description: 'The iri type of the property used to standarize data'
          type: string
          nullable: true
        query:
          description: 'An array of aditional query values that need to be applied to the iri, for example anly accept products from a specific catagory'
          type: array
          items:
            type: string
          nullable: true
        multipleOf:
          description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
          type: integer
          nullable: true
        maximum:
          description: '*Can only be used in combination with type integer* The maximum allowed value'
          type: integer
          nullable: true
        exclusiveMaximum:
          description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
          type: boolean
          nullable: true
        minimum:
          description: '*Can only be used in combination with type integer* The minimum allowed value'
          type: integer
          nullable: true
        exclusiveMinimum:
          description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
          type: boolean
          nullable: true
        maxLength:
          description: 'The maximum amount of characters in the value'
          type: integer
          nullable: true
        minLength:
          description: 'The minimal amount of characters in the value'
          type: integer
          nullable: true
        pattern:
          description: 'A [regular expression](https://en.wikipedia.org/wiki/Regular_expression) that the value should comply to'
          type: string
          nullable: true
        additionalItems:
          description: 'Not yet supported by business logic'
          type: boolean
          nullable: true
        maxItems:
          description: '*Can only be used in combination with type array* The maximum array length'
          type: integer
          nullable: true
        minItems:
          description: '*Can only be used in combination with type array* The minimum allowed value'
          type: integer
          nullable: true
        uniqueItems:
          description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
          type: boolean
          nullable: true
        maxProperties:
          description: '*Can only be used in combination with type integer* The maximum amount of properties an object should contain'
          type: integer
          nullable: true
        minProperties:
          description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
          type: integer
          nullable: true
        required:
          description: 'Only whether or not this property is required'
          type: boolean
          nullable: true
        properties:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        additionalProperties:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        object:
          description: 'Not yet supported by business logic'
          type: string
          nullable: true
        enum:
          description: 'An array of possible values, input is limited to this array]'
          type: array
          items:
            type: string
          nullable: true
        description:
          description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
          type: string
          nullable: true
        defaultValue:
          description: 'An default value for this value that will be used if a user doesn''t supply a value'
          type: string
          nullable: true
        nullable:
          description: 'Whether or not this property can be left empty'
          type: boolean
          nullable: true
        discriminator:
          description: 'To help API consumers detect the object type, you can add the discriminator/propertyName keyword to model definitions. This keyword points to the property that specifies the data type name'
          type: string
          nullable: true
        readOnly:
          description: 'Whether or not this property is read only'
          type: boolean
          nullable: true
        writeOnly:
          description: 'Whether or not this property is write only'
          type: boolean
          nullable: true
        xml:
          description: 'An XML representation of the swagger docs'
          type: string
          nullable: true
        externalDoc:
          description: 'An link to any external documentation for the value'
          type: string
          nullable: true
        example:
          description: 'An example of the value that should be supplied'
          type: string
          nullable: true
        deprecated:
          description: 'Whether or not this property has been deprecated and wil be removed in the future'
          type: boolean
          nullable: true
        availableFrom:
          description: 'The moment from which this value is available'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        availableUntil:
          description: '*should be used in combination with deprecated* The moment where until this value is available'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        minDate:
          description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        maxDate:
          description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        icon:
          description: 'The icon of this property'
          type: string
          nullable: true
        slug:
          description: 'The slug of this property'
          type: string
          nullable: true
        start:
          description: 'Whether or not this proerty is the starting oint of a process'
          type: boolean
          nullable: true
        configuration:
          description: 'An array of possible configuration options for form ellements'
          type: array
          items:
            type: string
          nullable: true
    RequestType-read:
      type: object
      description: 'All properties contained in the RequestType type.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        organization:
          description: 'A specific commonground organisation'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        icon:
          description: 'The icon of this property'
          type: string
          nullable: true
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this RequestType'
          type: string
          nullable: true
        properties:
          description: 'The properties for this request type'
          type: array
          items:
            $ref: '#/components/schemas/Property-read'
        unique:
          description: 'Whether or not this request is unique to a submitter'
          type: boolean
          nullable: true
        parentRequired:
          description: 'If this request type needs a parent request'
          type: boolean
        children:
          description: 'The children of this request type'
          type: array
          items:
            $ref: '#/components/schemas/RequestType-read'
        parent:
          description: 'The parent of this request type'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/RequestType-read'
        caseType:
          description: 'The default case type that is created when submiting this request'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    RequestType-write:
      type: object
      description: 'All properties contained in the RequestType type.'
      properties:
        organization:
          description: 'A specific commonground organisation'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        icon:
          description: 'The icon of this property'
          type: string
          nullable: true
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this RequestType'
          type: string
          nullable: true
        unique:
          description: 'Whether or not this request is unique to a submitter'
          type: boolean
          nullable: true
        parentRequired:
          description: 'If this request type needs a parent request'
          type: boolean
        children:
          description: 'The children of this request type'
          type: array
          items:
            $ref: '#/components/schemas/RequestType-write'
        parent:
          description: 'The parent of this request type'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/RequestType-write'
        caseType:
          description: 'The default case type that is created when submiting this request'
          type: string
          nullable: true
      required:
        - name
    'RequestType:jsonld-read':
      type: object
      description: 'All properties contained in the RequestType type.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        organization:
          description: 'A specific commonground organisation'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        icon:
          description: 'The icon of this property'
          type: string
          nullable: true
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this RequestType'
          type: string
          nullable: true
        properties:
          description: 'The properties for this request type'
          type: array
          items:
            $ref: '#/components/schemas/Property:jsonld-read'
        unique:
          description: 'Whether or not this request is unique to a submitter'
          type: boolean
          nullable: true
        parentRequired:
          description: 'If this request type needs a parent request'
          type: boolean
        children:
          description: 'The children of this request type'
          type: array
          items:
            $ref: '#/components/schemas/RequestType:jsonld-read'
        parent:
          description: 'The parent of this request type'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/RequestType:jsonld-read'
        caseType:
          description: 'The default case type that is created when submiting this request'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'RequestType:jsonld-write':
      type: object
      description: 'All properties contained in the RequestType type.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          description: 'A specific commonground organisation'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        icon:
          description: 'The icon of this property'
          type: string
          nullable: true
        name:
          description: 'The name of this RequestType'
          type: string
        description:
          description: 'An short description of this RequestType'
          type: string
          nullable: true
        unique:
          description: 'Whether or not this request is unique to a submitter'
          type: boolean
          nullable: true
        parentRequired:
          description: 'If this request type needs a parent request'
          type: boolean
        children:
          description: 'The children of this request type'
          type: array
          items:
            $ref: '#/components/schemas/RequestType:jsonld-write'
        parent:
          description: 'The parent of this request type'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/RequestType:jsonld-write'
        caseType:
          description: 'The default case type that is created when submiting this request'
          type: string
          nullable: true
      required:
        - name
    Task-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        requestType:
          description: 'The requestType that this task belongs to'
          $ref: '#/components/schemas/RequestType-read'
        name:
          description: 'The name of this Task'
          type: string
        description:
          description: 'The description of this Task'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        type:
          description: 'The type of the task'
          type: string
        event:
          description: 'The type of event that trigers the ttask'
          type: string
        code:
          description: 'The type of the task'
          type: string
          nullable: true
        requestHeaders:
          description: 'The request headers supplied by client'
          type: array
          items:
            type: string
        requestBody:
          description: 'The request body supplied by client'
          type: array
          items:
            type: string
        webHookHeaders:
          description: 'The the headers of the webHook'
          type: array
          items:
            type: string
        timeInterval:
          description: 'The time interval afther wichs to trigger the task (in dateinterval format https://www.php.net/manual/en/class.dateinterval.php)'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
      required:
        - requestType
        - name
    Task-write:
      type: object
      description: ''
      required:
        - requestType
        - name
      properties:
        requestType:
          description: 'The requestType that this task belongs to'
          $ref: '#/components/schemas/RequestType-write'
        name:
          description: 'The name of this Task'
          type: string
        description:
          description: 'The description of this Task'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        type:
          description: 'The type of the task'
          type: string
        event:
          description: 'The type of event that trigers the ttask'
          type: string
        code:
          description: 'The type of the task'
          type: string
          nullable: true
        requestHeaders:
          description: 'The request headers supplied by client'
          type: array
          items:
            type: string
        requestBody:
          description: 'The request body supplied by client'
          type: array
          items:
            type: string
        webHookHeaders:
          description: 'The the headers of the webHook'
          type: array
          items:
            type: string
        timeInterval:
          description: 'The time interval afther wichs to trigger the task (in dateinterval format https://www.php.net/manual/en/class.dateinterval.php)'
          type: string
          nullable: true
    'Task:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        requestType:
          description: 'The requestType that this task belongs to'
          $ref: '#/components/schemas/RequestType:jsonld-read'
        name:
          description: 'The name of this Task'
          type: string
        description:
          description: 'The description of this Task'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        type:
          description: 'The type of the task'
          type: string
        event:
          description: 'The type of event that trigers the ttask'
          type: string
        code:
          description: 'The type of the task'
          type: string
          nullable: true
        requestHeaders:
          description: 'The request headers supplied by client'
          type: array
          items:
            type: string
        requestBody:
          description: 'The request body supplied by client'
          type: array
          items:
            type: string
        webHookHeaders:
          description: 'The the headers of the webHook'
          type: array
          items:
            type: string
        timeInterval:
          description: 'The time interval afther wichs to trigger the task (in dateinterval format https://www.php.net/manual/en/class.dateinterval.php)'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
      required:
        - requestType
        - name
    'Task:jsonld-write':
      type: object
      description: ''
      required:
        - requestType
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        requestType:
          description: 'The requestType that this task belongs to'
          $ref: '#/components/schemas/RequestType:jsonld-write'
        name:
          description: 'The name of this Task'
          type: string
        description:
          description: 'The description of this Task'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
        type:
          description: 'The type of the task'
          type: string
        event:
          description: 'The type of event that trigers the ttask'
          type: string
        code:
          description: 'The type of the task'
          type: string
          nullable: true
        requestHeaders:
          description: 'The request headers supplied by client'
          type: array
          items:
            type: string
        requestBody:
          description: 'The request body supplied by client'
          type: array
          items:
            type: string
        webHookHeaders:
          description: 'The the headers of the webHook'
          type: array
          items:
            type: string
        timeInterval:
          description: 'The time interval afther wichs to trigger the task (in dateinterval format https://www.php.net/manual/en/class.dateinterval.php)'
          type: string
          nullable: true
definitions:
  Property-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      title:
        description: 'The title of this property'
        type: string
        example: 'My Property'
        maxLength: 255
        minLength: 3
      name:
        description: 'The name of the property as used in api calls, extracted from title on snake_case basis'
        type: string
        example: my_property
        maxLength: 255
        minLength: 15
      utter:
        description: 'The utter of this property as a question for chatbot like senarios'
        type: string
        example: 'We would like to ask you to'
        maxLength: 255
        minLength: 3
      order:
        description: 'The order in wichs this propertie is desplayed'
        type: int
        example: '1'
      type:
        description: 'The type of this property'
        type: string
        example: string
        maxLength: 255
      format:
        description: 'The swagger type of the property as used in api calls'
        type: string
        example: string
        maxLength: 255
      iri:
        description: 'The iri type of the property used to standarize data'
        type: string
        example: 'https://schema.org/name'
        maxLength: 255
      query:
        description: 'An array of aditional query values that need to be applied to the iri, for example anly accept products from a specific catagory'
        type: array
      multipleOf:
        description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
        type: string
        example: '2'
      maximum:
        description: '*Can only be used in combination with type integer* The maximum allowed value'
        type: string
        example: '2'
      exclusiveMaximum:
        description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
        type: string
        example: 'true'
      minimum:
        description: '*Can only be used in combination with type integer* The minimum allowed value'
        type: string
        example: '2'
      exclusiveMinimum:
        description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
        type: string
        example: 'true'
      maxLength:
        description: 'The maximum amount of characters in the value'
        type: string
        example: '2'
      minLength:
        description: 'The minimal amount of characters in the value'
        type: int
        example: '2'
      pattern:
        description: 'A [regular expression](https://en.wikipedia.org/wiki/Regular_expression) that the value should comply to'
        type: string
        example: regex
        maxLength: 255
      additionalItems:
        description: 'Not yet supported by business logic'
        type: bool
      maxItems:
        description: '*Can only be used in combination with type array* The maximum array length'
        type: string
        example: '2'
      minItems:
        description: '*Can only be used in combination with type array* The minimum allowed value'
        type: string
        example: '2'
      uniqueItems:
        description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
        type: bool
        example: 'false'
      maxProperties:
        description: '*Can only be used in combination with type integer* The maximum amount of properties an object should contain'
        type: string
        example: '2'
      minProperties:
        description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
        type: int
        example: '2'
      required:
        description: 'Only whether or not this property is required'
        type: bool
        example: 'false'
      properties:
        description: 'Not yet supported by business logic'
        type: '\Property[]|\ArrayCollection'
      additionalProperties:
        description: 'Not yet supported by business logic'
        type: '\Property[]|\ArrayCollection'
      object:
        description: 'Not yet supported by business logic'
        type: object
      enum:
        description: 'An array of possible values, input is limited to this array]'
        type: array
      description:
        description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
        type: string
        example: 'My value'
      defaultValue:
        description: 'An default value for this value that will be used if a user doesn''t supply a value'
        type: string
        example: 'My value'
        maxLength: 255
      nullable:
        description: 'Whether or not this property can be left empty'
        type: bool
        example: 'false'
      discriminator:
        description: 'To help API consumers detect the object type, you can add the discriminator/propertyName keyword to model definitions. This keyword points to the property that specifies the data type name'
        type: string
        example: name
        maxLength: 255
      readOnly:
        description: 'Whether or not this property is read only'
        type: bool
        example: 'false'
      writeOnly:
        description: 'Whether or not this property is write only'
        type: bool
        example: 'false'
      xml:
        description: 'An XML representation of the swagger docs'
        type: string
        example: '''<xml></xml>'''
      externalDoc:
        description: 'An link to any external documentation for the value'
        type: string
        example: 'https://www.w3.org/TR/NOTE-datetime'
        maxLength: 255
      example:
        description: 'An example of the value that should be supplied'
        type: string
        example: 'My value'
        maxLength: 255
      deprecated:
        description: 'Whether or not this property has been deprecated and wil be removed in the future'
        type: bool
        example: 'false'
      availableFrom:
        description: 'The moment from which this value is available'
        type: string
        example: '2020-10-22 13:40:57'
        format: date-time
      availableUntil:
        description: '*should be used in combination with deprecated* The moment where until this value is available'
        type: string
        example: '2020-10-22 13:40:57'
        format: date-time
      minDate:
        description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
        type: string
        example: '2019-09-16T14:26:51+00:00'
      maxDate:
        description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
        type: string
        example: '2019-09-16T14:26:51+00:00'
      icon:
        description: 'The icon of this property'
        type: string
        example: 'My Property'
        maxLength: 255
        minLength: 3
      slug:
        description: 'The slug of this property'
        type: string
        example: my-slug
        maxLength: 255
        minLength: 3
      start:
        description: 'Whether or not this proerty is the starting oint of a process'
        type: string
        example: 'true'
      configuration:
        description: 'An array of possible configuration options for form ellements'
        type: array
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      requestType:
        description: 'The requestType that this property belongs to'
        type: object
    required: []
  Property-write:
    properties:
      title:
        description: 'The title of this property'
        type: string
        example: 'My Property'
        maxLength: 255
        minLength: 3
      order:
        description: 'The order in wichs this propertie is desplayed'
        type: int
        example: '1'
      type:
        description: 'The type of this property'
        type: string
        example: string
        maxLength: 255
      format:
        description: 'The swagger type of the property as used in api calls'
        type: string
        example: string
        maxLength: 255
      iri:
        description: 'The iri type of the property used to standarize data'
        type: string
        example: 'https://schema.org/name'
        maxLength: 255
      query:
        description: 'An array of aditional query values that need to be applied to the iri, for example anly accept products from a specific catagory'
        type: array
      multipleOf:
        description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
        type: string
        example: '2'
      maximum:
        description: '*Can only be used in combination with type integer* The maximum allowed value'
        type: string
        example: '2'
      exclusiveMaximum:
        description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
        type: string
        example: 'true'
      minimum:
        description: '*Can only be used in combination with type integer* The minimum allowed value'
        type: string
        example: '2'
      exclusiveMinimum:
        description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
        type: string
        example: 'true'
      maxLength:
        description: 'The maximum amount of characters in the value'
        type: string
        example: '2'
      minLength:
        description: 'The minimal amount of characters in the value'
        type: int
        example: '2'
      pattern:
        description: 'A [regular expression](https://en.wikipedia.org/wiki/Regular_expression) that the value should comply to'
        type: string
        example: regex
        maxLength: 255
      additionalItems:
        description: 'Not yet supported by business logic'
        type: bool
      maxItems:
        description: '*Can only be used in combination with type array* The maximum array length'
        type: string
        example: '2'
      minItems:
        description: '*Can only be used in combination with type array* The minimum allowed value'
        type: string
        example: '2'
      uniqueItems:
        description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
        type: bool
        example: 'false'
      maxProperties:
        description: '*Can only be used in combination with type integer* The maximum amount of properties an object should contain'
        type: string
        example: '2'
      minProperties:
        description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
        type: int
        example: '2'
      required:
        description: 'Only whether or not this property is required'
        type: bool
        example: 'false'
      properties:
        description: 'Not yet supported by business logic'
        type: '\Property[]|\ArrayCollection'
      additionalProperties:
        description: 'Not yet supported by business logic'
        type: '\Property[]|\ArrayCollection'
      object:
        description: 'Not yet supported by business logic'
        type: object
      enum:
        description: 'An array of possible values, input is limited to this array]'
        type: array
      description:
        description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
        type: string
        example: 'My value'
      defaultValue:
        description: 'An default value for this value that will be used if a user doesn''t supply a value'
        type: string
        example: 'My value'
        maxLength: 255
      nullable:
        description: 'Whether or not this property can be left empty'
        type: bool
        example: 'false'
      discriminator:
        description: 'To help API consumers detect the object type, you can add the discriminator/propertyName keyword to model definitions. This keyword points to the property that specifies the data type name'
        type: string
        example: name
        maxLength: 255
      readOnly:
        description: 'Whether or not this property is read only'
        type: bool
        example: 'false'
      writeOnly:
        description: 'Whether or not this property is write only'
        type: bool
        example: 'false'
      xml:
        description: 'An XML representation of the swagger docs'
        type: string
        example: '''<xml></xml>'''
      externalDoc:
        description: 'An link to any external documentation for the value'
        type: string
        example: 'https://www.w3.org/TR/NOTE-datetime'
        maxLength: 255
      example:
        description: 'An example of the value that should be supplied'
        type: string
        example: 'My value'
        maxLength: 255
      deprecated:
        description: 'Whether or not this property has been deprecated and wil be removed in the future'
        type: bool
        example: 'false'
      availableFrom:
        description: 'The moment from which this value is available'
        type: string
        example: '2020-10-22 13:40:57'
        format: date-time
      availableUntil:
        description: '*should be used in combination with deprecated* The moment where until this value is available'
        type: string
        example: '2020-10-22 13:40:57'
        format: date-time
      minDate:
        description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
        type: string
        example: '2019-09-16T14:26:51+00:00'
      maxDate:
        description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
        type: string
        example: '2019-09-16T14:26:51+00:00'
      icon:
        description: 'The icon of this property'
        type: string
        example: 'My Property'
        maxLength: 255
        minLength: 3
      slug:
        description: 'The slug of this property'
        type: string
        example: my-slug
        maxLength: 255
        minLength: 3
      start:
        description: 'Whether or not this proerty is the starting oint of a process'
        type: string
        example: 'true'
      configuration:
        description: 'An array of possible configuration options for form ellements'
        type: array
      requestType:
        description: 'The requestType that this property belongs to'
        type: object
    required: []
  RequestType-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      organization:
        description: 'A specific commonground organisation'
        type: string
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        maxLength: 255
        format: url
      icon:
        description: 'The icon of this property'
        type: string
        example: 'My Property'
        maxLength: 255
        minLength: 15
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this RequestType'
        type: string
        example: 'This is the best request ever'
        maxLength: 2550
      unique:
        description: 'Whether or not this request is unique to a submitter'
        type: bool
        example: 'false'
      parentRequired:
        description: 'If this request type needs a parent request'
        type: bool
      caseType:
        description: 'The default case type that is created when submiting this request'
        type: string
        example: 'http://vtc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      properties:
        description: 'The properties for this request type'
        type: '\Property[]|\ArrayCollection'
      children:
        description: 'The children of this request type'
        type: '\ArrayCollection|\RequestType[]'
      parent:
        description: 'The parent of this request type'
        type: \RequestType
    required:
      - name
  RequestType-write:
    properties:
      organization:
        description: 'A specific commonground organisation'
        type: string
        example: 'https://wrc.zaakonline.nl/organisations/16353702-4614-42ff-92af-7dd11c8eef9f'
        maxLength: 255
        format: url
      icon:
        description: 'The icon of this property'
        type: string
        example: 'My Property'
        maxLength: 255
        minLength: 15
      name:
        description: 'The name of this RequestType'
        type: string
        example: 'My RequestType'
        maxLength: 255
      description:
        description: 'An short description of this RequestType'
        type: string
        example: 'This is the best request ever'
        maxLength: 2550
      unique:
        description: 'Whether or not this request is unique to a submitter'
        type: bool
        example: 'false'
      parentRequired:
        description: 'If this request type needs a parent request'
        type: bool
      caseType:
        description: 'The default case type that is created when submiting this request'
        type: string
        example: 'http://vtc.zaakonline.nl/9bd169ef-bc8c-4422-86ce-a0e7679ab67a'
        maxLength: 255
      children:
        description: 'The children of this request type'
        type: '\ArrayCollection|\RequestType[]'
      parent:
        description: 'The parent of this request type'
        type: \RequestType
    required:
      - name
  RequestType-write-requesttype:
    properties:
      extends:
        description: 'The requestType that this requestType extends'
        type: object
    required:
      - name
  Task-read:
    properties:
      id:
        description: ''
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Task'
        type: string
        example: 'Task name'
        maxLength: 255
      description:
        description: 'The description of this Task'
        type: string
        example: 'Task description'
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        example: endpoint
        maxLength: 255
      type:
        description: 'The type of the task'
        type: string
        example: 'GET, POST, DELETE, CAMUNDA'
        maxLength: 255
      event:
        description: 'The type of event that trigers the ttask'
        type: string
        example: 'create, update, save or delete'
        maxLength: 255
      code:
        description: 'The type of the task'
        type: string
        example: 'GET, POST, DELETE, CAMUNDA'
        maxLength: 255
      requestHeaders:
        description: 'The request headers supplied by client'
        type: array
      requestBody:
        description: 'The request body supplied by client'
        type: array
      webHookHeaders:
        description: 'The the headers of the webHook'
        type: array
      timeInterval:
        description: 'The time interval afther wichs to trigger the task (in dateinterval format https://www.php.net/manual/en/class.dateinterval.php)'
        type: string
        example: P10D
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-10-22 13:40:57'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-10-22 13:40:57'
      requestType:
        description: 'The requestType that this task belongs to'
        type: object
    required:
      - name
  Task-write:
    properties:
      name:
        description: 'The name of this Task'
        type: string
        example: 'Task name'
        maxLength: 255
      description:
        description: 'The description of this Task'
        type: string
        example: 'Task description'
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        example: endpoint
        maxLength: 255
      type:
        description: 'The type of the task'
        type: string
        example: 'GET, POST, DELETE, CAMUNDA'
        maxLength: 255
      event:
        description: 'The type of event that trigers the ttask'
        type: string
        example: 'create, update, save or delete'
        maxLength: 255
      code:
        description: 'The type of the task'
        type: string
        example: 'GET, POST, DELETE, CAMUNDA'
        maxLength: 255
      requestHeaders:
        description: 'The request headers supplied by client'
        type: array
      requestBody:
        description: 'The request body supplied by client'
        type: array
      webHookHeaders:
        description: 'The the headers of the webHook'
        type: array
      timeInterval:
        description: 'The time interval afther wichs to trigger the task (in dateinterval format https://www.php.net/manual/en/class.dateinterval.php)'
        type: string
        example: P10D
      requestType:
        description: 'The requestType that this task belongs to'
        type: object
    required:
      - name
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-10-22 13:40:57'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-10-22 13:40:57'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-10-22 13:40:57'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-10-22 13:40:57'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Property
    description: |
      This property follows the following schemes (in order of importance)
      https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md
      https://tools.ietf.org/html/draft-wright-json-schema-validation-00
      http://json-schema.org/.
      
      
  -
    name: RequestType
    description: |
      All properties contained in the RequestType type.
      
      
  -
    name: Task
    description: |
      
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
      write-requesttype: 'write-requesttype right to the RequestType resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
      write-requesttype: 'write-requesttype right to the RequestType resource'
host: irc.zaakonline.nl
servers:
  -
    name: zuid-drecht.nl
    url: vtc.dev.zuid-drecht.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
